interface Todo {
  id: ID!
  text: String!
  done: Boolean!
  user: User!
}

type User {
  id: ID!
  name: String!
}

type Test implements Todo {
  id: ID!
  text: String!
  done: Boolean!
  user: User!
  ref: String!
  index: Int
  price: Float
}

type Query {
  todos: [Todo!]!
  users: [User!]!
  testExtends: Test
}

input NewTodo {
  text: String!
  userId: String!
}

type Mutation {
  createTodo(input: NewTodo!): Todo!
}